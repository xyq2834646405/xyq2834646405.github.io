<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Lombok</title>
    <link href="/2024/12/03/Lombok/"/>
    <url>/2024/12/03/Lombok/</url>
    
    <content type="html"><![CDATA[<p>使用Lombok需要maven引入对应的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.projectlombok<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>lombok<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.18.26<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><ol><li><p>构造对象类型</p><p> <code>@AllArgsConstructor</code>：全参构造，不管什么类型</p><p> <code>@NoArgsConstructor</code>：无参构造</p><p> <code>@RequiredArgsConstructor</code>：生成构建方法，类被<code>final</code>修饰和<code>@NonNull</code>注解的字段</p><p> <code>@Builder</code>：构建模式构建对象</p></li><li><p>使用对象类型</p><p><code>@Getter</code>：生成所有字段的get方法</p><p><code>@Setter</code>：生成所有字段的set方法</p><p> <code>@ToString</code>：生成类的toString方法</p><p> <code>@EqualsAndHashCode</code>：重写类的Equals和HashCode方法</p><p> <code>@Data</code>：实现<code>@Getter</code>、<code>@Setter</code>、<code>@ToString</code>、<code>@EqualsAndHashCode</code>所有的操作</p><p><code>@Accessors(chain = true)</code>：链式编程，</p></li><li><p>日志类型</p><p>@Log、@Log4j、@Log4j2、@Slf4j</p><p>针对不同的日志实现产品，有不同的日志注解，按照系统的需求使用。</p></li><li><p>资源关闭类型</p><p> <code>@CleanUp</code>：自动关闭资源，例如IO流对象</p></li><li><p>异常抛出类型</p><p> <code>@SneakyThrows</code>：对方法中异常进行捕获并抛出</p></li></ol><p>Lombok的坑</p><ol><li><p>@Data帮你生成了equals的方法，他的equals的方法只会帮你比较当前类对象的属性，不会比较父类的属性，这个时候本该不等的对象，变成了相等。</p><p>解决方案：<code>@EqualsAndHashCode(callSuper = true)</code>，用这个生成，equals比较的时候会顺便比较父类的equals。</p></li><li><p><code>@Getter</code>和@<code>Setter</code>当出现第一个子母小写第二个字符大写的时候，生成的setter&#x2F;getter方法，与mybatis获取属性的方法会出现冲突。</p><p>如：sName，生成getSName、setSName，但是mybati中获取正确的属性名为sName。</p><p>解决方案：用idea手动生成setter&#x2F;getter方法或避免使用这种命名方式。</p></li><li><p>@Accessors(chain &#x3D; true)与excel导出工具（如：easyExcel）使用有冲突</p><p>@Accessors(chain &#x3D; true)会将setter方法的放回置为当前类型，而不是void，在easyExcel中使用cglib做为反射工具包的。cglib的rt.jar中的Introspector，这个类来获取get和set的方法和属性。Introspector类中的实现，在判断setXXX方法加了一个判断，返回值是否为Void，此时和@Accessors(chain &#x3D; true)冲突了。</p><p>解决方案：不用@Accessors(chain &#x3D; true)</p></li><li><p>@Builder默认值问题，在lombok<code>1.18.4</code>之前字段加上默认值，通过build构建出来的对象没有复制。</p><p>解决方案：属性上加<code>@Builder.Defafult</code>或<code>@Builder(toBuilder = true)</code></p></li><li><p><code>@Builder</code>和<code>@Data</code>不能同时使用，会导致有一些方法没有自动生成</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Lombok</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mybatis Plus多数据源</title>
    <link href="/2024/11/14/Mybatis-Plus%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
    <url>/2024/11/14/Mybatis-Plus%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>dynamic-datasource-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.5.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br><span class="hljs-comment"># 配置数据源信息</span><br><span class="hljs-attr">datasource:</span><br><span class="hljs-attr">dynamic:</span><br><span class="hljs-comment"># 设置默认的数据源或者数据源组,默认值即为master</span><br><span class="hljs-attr">primary:</span> <span class="hljs-string">master</span><br><span class="hljs-comment"># 严格匹配数据源,默认false.true未匹配到指定数据源时抛异常,false使用默认数据源</span><br><span class="hljs-attr">strict:</span> <span class="hljs-literal">false</span><br><span class="hljs-attr">datasource:</span><br><span class="hljs-attr">master:</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/mybatis_plus?characterEncoding=utf8&amp;useSSL=false</span><br><span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br><span class="hljs-attr">password:</span> <span class="hljs-number">123456</span><br><span class="hljs-attr">slave_1:</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/mybatis_plus_1?characterEncoding=utf8&amp;useSSL=false</span><br><span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br><span class="hljs-attr">password:</span> <span class="hljs-number">123456</span><br></code></pre></td></tr></table></figure><h2 id="service层添加注解"><a href="#service层添加注解" class="headerlink" title="service层添加注解"></a>service层添加注解</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@DS(&quot;slave_1&quot;)</span><br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">ProductServiceImpl</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">ServiceImpl</span>&lt;ProductMapper, Product&gt;<br><span class="hljs-keyword">implements</span> <span class="hljs-title class_">ProductService</span> &#123;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="多数据源事务"><a href="#多数据源事务" class="headerlink" title="多数据源事务"></a>多数据源事务</h2><p>在业务方法上加<code>@DSTransactional(rollbackFor = Exception.class)</code>即可</p>]]></content>
    
    
    
    <tags>
      
      <tag>Mybatis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mybatis Plus</title>
    <link href="/2024/11/14/Mybatis-Plus/"/>
    <url>/2024/11/14/Mybatis-Plus/</url>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>MyBatis-Plus（简称 MP）是一个 MyBatis的增强工具，在 MyBatis 的基础上只做增强不做改变，为<br>简化开发、提高效率而生。</p><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ul><li><strong>无侵入</strong>：只做增强不做改变，引入它不会对现有工程产生影响，如丝般顺滑</li><li><strong>损耗小</strong>：启动即会自动注入基本 CURD，性能基本无损耗，直接面向对象操作</li><li><strong>强大的 CRUD 操作</strong>：内置通用 Mapper、通用 Service，仅仅通过少量配置即可实现单表大部分 CRUD 操作，更有强大的条件构造器，满足各类使用需求</li><li><strong>支持 Lambda 形式调用</strong>：通过 Lambda 表达式，方便的编写各类查询条件，无需再担心字段写错</li><li><strong>支持主键自动生成</strong>：支持多达 4 种主键策略（内含分布式唯一 ID 生成器 - Sequence），可自由配置，完美解决主键问题</li><li><strong>支持 ActiveRecord 模式</strong>：支持 ActiveRecord 形式调用，实体类只需继承 Model 类即可进行强大的 CRUD 操作</li><li><strong>支持自定义全局通用操作</strong>：支持全局通用方法注入（ Write once, use anywhere ）</li><li><strong>内置代码生成器</strong>：采用代码或者 Maven 插件可快速生成 Mapper 、 Model 、 Service 、 Controller 层代码，支持模板引擎，更有超多自定义配置等您来使用</li><li><strong>内置分页插件</strong>：基于 MyBatis 物理分页，开发者无需关心具体操作，配置好插件之后，写分页等同于普通 List 查询</li><li><strong>分页插件支持多种数据库</strong>：支持 MySQL、MariaDB、Oracle、DB2、H2、HSQL、SQLite、Postgre、SQLServer 等多种数据库</li><li><strong>内置性能分析插件</strong>：可输出 SQL 语句以及其执行时间，建议开发测试时启用该功能，能快速揪出慢查询</li><li><strong>内置全局拦截插件</strong>：提供全表 delete 、 update 操作智能分析阻断，也可自定义拦截规则，预防误操作</li></ul><h2 id="相关地址"><a href="#相关地址" class="headerlink" title="相关地址"></a>相关地址</h2><p>官方地址: <a href="http://mp.baomidou.com/">http://mp.baomidou.com</a></p><p>代码发布地址:</p><p>Github: <a href="https://github.com/baomidou/mybatis-plus">https://github.com/baomidou/mybatis-plus</a></p><p>Gitee: <a href="https://gitee.com/baomidou/mybatis-plus">https://gitee.com/baomidou/mybatis-plus</a></p><p>文档发布地址: <a href="https://baomidou.com/pages/24112f">https://baomidou.com/pages/24112f</a></p><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.5.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><h2 id="添加配置文件"><a href="#添加配置文件" class="headerlink" title="添加配置文件"></a>添加配置文件</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br><span class="hljs-comment"># 配置数据源信息</span><br><span class="hljs-attr">datasource:</span><br><span class="hljs-comment"># 配置数据源类型</span><br><span class="hljs-attr">type:</span> <span class="hljs-string">com.zaxxer.hikari.HikariDataSource</span><br><span class="hljs-comment"># 配置连接数据库信息</span><br><span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/mybatis_plus?characterEncoding=utf8&amp;useSSL=false</span><br><span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br><span class="hljs-attr">password:</span> <span class="hljs-number">123456</span><br></code></pre></td></tr></table></figure><p>注：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># MySQL5.7版本的url：</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/mybatis_plus?characterEncoding=utf-8&amp;useSSL=false</span><br><span class="hljs-comment"># MySQL8.0版本的url：</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/mybatis_plus?serverTimezone=GMT%2B8&amp;characterEncoding=utf-8&amp;useSSL=false</span><br><br><span class="hljs-comment"># spring boot 2.0（内置jdbc5驱动），驱动类使用：</span><br><span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.jdbc.Driver</span><br><span class="hljs-comment"># spring boot 2.1及以上（内置jdbc8驱动），驱动类使用：</span><br><span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br></code></pre></td></tr></table></figure><h2 id="启动类配置"><a href="#启动类配置" class="headerlink" title="启动类配置"></a>启动类配置</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@MapperScan(&quot;com.xq.mybatisplus.mapper&quot;)</span><br></code></pre></td></tr></table></figure><p>在Spring Boot启动类中添加@MapperScan注解，扫描mapper包</p><h2 id="mapper"><a href="#mapper" class="headerlink" title="mapper"></a>mapper</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> interface 对象Mapper <span class="hljs-keyword">extends</span> <span class="hljs-title class_">BaseMapper</span>&lt;对象&gt; &#123;&#125;<br></code></pre></td></tr></table></figure><h2 id="BaseMapper"><a href="#BaseMapper" class="headerlink" title="BaseMapper"></a>BaseMapper</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">BaseMapper</span>&lt;T&gt; <span class="hljs-keyword">extends</span> <span class="hljs-title class_">Mapper</span>&lt;T&gt; &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 插入一条记录</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> entity 实体对象</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">insert</span><span class="hljs-params">(T entity)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 ID 删除</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> id 主键ID</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">deleteById</span><span class="hljs-params">(Serializable id)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 columnMap 条件，删除记录</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> columnMap 表字段 map 对象</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">deleteByMap</span><span class="hljs-params">(<span class="hljs-meta">@Param(Constants.COLUMN_MAP)</span> Map&lt;String, Object&gt; columnMap)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 entity 条件，删除记录</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null,里面的 entity 用于生成 where 语句）</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">delete</span><span class="hljs-params">(<span class="hljs-meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 删除（根据ID 批量删除）</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> idList 主键ID列表(不能为 null 以及 empty)</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">deleteBatchIds</span><span class="hljs-params">(<span class="hljs-meta">@Param(Constants.COLLECTION)</span> Collection&lt;? extends Serializable&gt; idList)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 ID 修改</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> entity 实体对象</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">updateById</span><span class="hljs-params">(<span class="hljs-meta">@Param(Constants.ENTITY)</span> T entity)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 whereEntity 条件，更新记录</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> entity        实体对象 (set 条件值,可以为 null)</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> updateWrapper 实体对象封装操作类（可以为 null,里面的 entity 用于生成 where 语句）</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-type">int</span> <span class="hljs-title function_">update</span><span class="hljs-params">(<span class="hljs-meta">@Param(Constants.ENTITY)</span> T entity, <span class="hljs-meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; updateWrapper)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 ID 查询</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> id 主键ID</span><br><span class="hljs-comment">     */</span><br>    T <span class="hljs-title function_">selectById</span><span class="hljs-params">(Serializable id)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询（根据ID 批量查询）</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> idList 主键ID列表(不能为 null 以及 empty)</span><br><span class="hljs-comment">     */</span><br>    List&lt;T&gt; <span class="hljs-title function_">selectBatchIds</span><span class="hljs-params">(<span class="hljs-meta">@Param(Constants.COLLECTION)</span> Collection&lt;? extends Serializable&gt; idList)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 查询（根据 columnMap 条件）</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> columnMap 表字段 map 对象</span><br><span class="hljs-comment">     */</span><br>    List&lt;T&gt; <span class="hljs-title function_">selectByMap</span><span class="hljs-params">(<span class="hljs-meta">@Param(Constants.COLUMN_MAP)</span> Map&lt;String, Object&gt; columnMap)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 entity 条件，查询一条记录</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null）</span><br><span class="hljs-comment">     */</span><br>    T <span class="hljs-title function_">selectOne</span><span class="hljs-params">(<span class="hljs-meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 Wrapper 条件，查询总记录数</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null）</span><br><span class="hljs-comment">     */</span><br>    Integer <span class="hljs-title function_">selectCount</span><span class="hljs-params">(<span class="hljs-meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 entity 条件，查询全部记录</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null）</span><br><span class="hljs-comment">     */</span><br>    List&lt;T&gt; <span class="hljs-title function_">selectList</span><span class="hljs-params">(<span class="hljs-meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 Wrapper 条件，查询全部记录</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null）</span><br><span class="hljs-comment">     */</span><br>    List&lt;Map&lt;String, Object&gt;&gt; <span class="hljs-title function_">selectMaps</span><span class="hljs-params">(<span class="hljs-meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 Wrapper 条件，查询全部记录</span><br><span class="hljs-comment">     * &lt;p&gt;注意： 只返回第一个字段的值&lt;/p&gt;</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null）</span><br><span class="hljs-comment">     */</span><br>    List&lt;Object&gt; <span class="hljs-title function_">selectObjs</span><span class="hljs-params">(<span class="hljs-meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 entity 条件，查询全部记录（并翻页）</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> page         分页查询条件（可以为 RowBounds.DEFAULT）</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> queryWrapper 实体对象封装操作类（可以为 null）</span><br><span class="hljs-comment">     */</span><br>    &lt;E <span class="hljs-keyword">extends</span> <span class="hljs-title class_">IPage</span>&lt;T&gt;&gt; E <span class="hljs-title function_">selectPage</span><span class="hljs-params">(E page, <span class="hljs-meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 根据 Wrapper 条件，查询全部记录（并翻页）</span><br><span class="hljs-comment">     *</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> page         分页查询条件</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> queryWrapper 实体对象封装操作类</span><br><span class="hljs-comment">     */</span><br>    &lt;E <span class="hljs-keyword">extends</span> <span class="hljs-title class_">IPage</span>&lt;Map&lt;String, Object&gt;&gt;&gt; E <span class="hljs-title function_">selectMapsPage</span><span class="hljs-params">(E page, <span class="hljs-meta">@Param(Constants.WRAPPER)</span> Wrapper&lt;T&gt; queryWrapper)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h2><h3 id="TableName"><a href="#TableName" class="headerlink" title="@TableName"></a>@TableName</h3><p>若实体类类型的类名和要操作的表的表名不一致时时使用</p><h3 id="TableId"><a href="#TableId" class="headerlink" title="@TableId"></a>@TableId</h3><p>将其标识为主键</p><p>type属性：</p><p>IdType.ASSIGN_ID：默认，基于雪花算法的策略生成数据id，与数据库id是否设置自增无关</p><p>IdType.AUTO：使用数据库的自增策略，注意，该类型请确保数据库设置了id自增，<br>否则无效</p><h3 id="TableField"><a href="#TableField" class="headerlink" title="@TableField"></a>@TableField</h3><ol><li>实体属性和字段名不一样</li><li>实体属性不和数据库一一关联</li></ol><h3 id="TableLogic"><a href="#TableLogic" class="headerlink" title="@TableLogic"></a>@TableLogic</h3><p>逻辑删除</p><h3 id="Vesion"><a href="#Vesion" class="headerlink" title="@Vesion"></a>@Vesion</h3><p>乐观锁插件，修改的时候会帮你带上版本号，需要在mybatis配置文件里面添加对应的配置，配置文件写在分页里面，可查看下方</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//添加乐观锁插件</span><br>interceptor.addInnerInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">OptimisticLockerInnerInterceptor</span>());<br></code></pre></td></tr></table></figure><h2 id="条件构造器"><a href="#条件构造器" class="headerlink" title="条件构造器"></a>条件构造器</h2><h2 id="分页插件"><a href="#分页插件" class="headerlink" title="分页插件"></a>分页插件</h2><p>添加配置文件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Configuration</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MybatisPlusConfig</span> &#123;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 分页插件</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> MybatisPlusInterceptor <span class="hljs-title function_">performanceInterceptor</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-type">MybatisPlusInterceptor</span> <span class="hljs-variable">interceptor</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MybatisPlusInterceptor</span>();<br><span class="hljs-comment">//添加分页插件</span><br>        interceptor.addInnerInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">PaginationInnerInterceptor</span>(DbType.MYSQL));<br><span class="hljs-comment">//添加乐观锁插件</span><br>interceptor.addInnerInterceptor(<span class="hljs-keyword">new</span> <span class="hljs-title class_">OptimisticLockerInnerInterceptor</span>());<br>        <span class="hljs-keyword">return</span> interceptor;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h2 id="代码生成器"><a href="#代码生成器" class="headerlink" title="代码生成器"></a>代码生成器</h2><p>添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.baomidou<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.5.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.freemarker<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>freemarker<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.3.31<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br></code></pre></td></tr></table></figure><p>添加代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java">FastAutoGenerator.create(<span class="hljs-string">&quot;jdbc:mysql://127.0.0.1:3306/mybatis_plus? characterEncoding=utf-8&amp;userSSL=false&quot;</span>, <span class="hljs-string">&quot;root&quot;</span>, <span class="hljs-string">&quot;123456&quot;</span>)<br>                .globalConfig(builder -&gt; &#123;<br>                    builder.author(<span class="hljs-string">&quot;atguigu&quot;</span>) <span class="hljs-comment">// 设置作者</span><br><span class="hljs-comment">//                            .enableSwagger() // 开启 swagger 模式</span><br>                            .fileOverride() <span class="hljs-comment">// 覆盖已生成文件</span><br>                            .outputDir(<span class="hljs-string">&quot;D://mybatis_plus&quot;</span>); <span class="hljs-comment">// 指定输出目录</span><br>                &#125;)<br>                .packageConfig(builder -&gt; &#123;<br>                    builder<br>                            .parent(<span class="hljs-string">&quot;com.atguigu&quot;</span>) <span class="hljs-comment">// 设置父包名</span><br>                            .moduleName(<span class="hljs-string">&quot;mybatisplus&quot;</span>) <span class="hljs-comment">// 设置父包模块名</span><br>                            .pathInfo(Collections.singletonMap(OutputFile.mapperXml, <span class="hljs-string">&quot;D://mybatis_plus&quot;</span>));<span class="hljs-comment">// 设置mapperXml生成路径</span><br>                &#125;)<br>                .strategyConfig(builder -&gt; &#123;<br>                    builder<br>                            .addInclude(<span class="hljs-string">&quot;t_user&quot;</span>) <span class="hljs-comment">// 设置需要生成的表名</span><br>                            .addTablePrefix(<span class="hljs-string">&quot;t_&quot;</span>, <span class="hljs-string">&quot;c_&quot;</span>); <span class="hljs-comment">// 设置过滤表前缀</span><br>                &#125;)<br>                .templateEngine(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FreemarkerTemplateEngine</span>()) <span class="hljs-comment">// 使用Freemarker 引擎模板，默认的是Velocity引擎模板</span><br>                .execute();<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Mybatis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mybatis批量新增和修改</title>
    <link href="/2024/11/14/Mybatis%E6%89%B9%E9%87%8F%E6%96%B0%E5%A2%9E%E5%92%8C%E4%BF%AE%E6%94%B9/"/>
    <url>/2024/11/14/Mybatis%E6%89%B9%E9%87%8F%E6%96%B0%E5%A2%9E%E5%92%8C%E4%BF%AE%E6%94%B9/</url>
    
    <content type="html"><![CDATA[<p>批量操作的时候可以在mysql数据库连接池添加<code>allowMultiQueries=true</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/test_db?allowMultiQueries=true</span><br></code></pre></td></tr></table></figure><p>即可使用批量操作(新增同理)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">update</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;batchUpdate&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">foreach</span> <span class="hljs-attr">collection</span>=<span class="hljs-string">&quot;list&quot;</span> <span class="hljs-attr">item</span>=<span class="hljs-string">&quot;item&quot;</span> <span class="hljs-attr">index</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">open</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">close</span>=<span class="hljs-string">&quot;&quot;</span> <span class="hljs-attr">separator</span>=<span class="hljs-string">&quot;;&quot;</span>&gt;</span><br>        UPDATE user_t<br>        SET user_name = #&#123;item.userName&#125;<br>        WHERE id= #&#123;item.id&#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">foreach</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">update</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Mybatis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux版Nginx配置https</title>
    <link href="/2024/11/13/Linux%E7%89%88Nginx%E9%85%8D%E7%BD%AEhttps/"/>
    <url>/2024/11/13/Linux%E7%89%88Nginx%E9%85%8D%E7%BD%AEhttps/</url>
    
    <content type="html"><![CDATA[<h2 id="配置文件修改"><a href="#配置文件修改" class="headerlink" title="配置文件修改"></a>配置文件修改</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">进入nginx配置文件目录</span><br>/usr/local/nginx/conf<br><span class="hljs-meta prompt_"># </span><span class="language-bash">备份默认配置</span><br>cp nginx.conf nginx.conf.default<br><span class="hljs-meta prompt_"># </span><span class="language-bash">修改配置文件</span><br>vim nginx.conf<br></code></pre></td></tr></table></figure><h2 id="阿里云生成证书与配置"><a href="#阿里云生成证书与配置" class="headerlink" title="阿里云生成证书与配置"></a>阿里云生成证书与配置</h2><ol><li>数字证书管理服务-&gt;证书管理-&gt;SSL证书管理-&gt;个人测试证书（原免费证书）-&gt;立即购买</li></ol><ol start="2"><li><p><code>创建证书</code>，填写自己的域名（有www的和没有www的）</p></li><li><p><code>点击更多</code>-&gt;<code>下载</code>-&gt;<code>nginx类型</code></p></li><li><p>将pem&#x2F;key文件放到nginx.conf同级目录下</p></li><li><p>修改nginx.conf的内容</p><p>修改下面的server_name、ssl_certificate、ssl_certificate_key、proxy_pass即可</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs conf">worker_processes  1;<br><br><br>events &#123;<br>    worker_connections  1024;<br>&#125;<br><br>http &#123;<br>    # 防DDoS配置<br>    limit_req_zone $binary_remote_addr zone=ddos:10m rate=10r/s;<br><br>    server &#123;<br>        # 监听端口<br>        listen       80;<br><br>        # 域名<br>        server_name  域名地址;<br>        <br>        # 配置SSL/TLS<br>        listen       443 ssl;<br>        server_name  域名地址;<br>        ssl_certificate      域名.pem;<br>        ssl_certificate_key  域名.key;<br><br>        # 配置SSL会话缓存<br>        ssl_session_cache shared:SSL:1m;<br>        ssl_session_timeout 5m;<br><br>        # 配置SSL协议版本和密码套件<br>        ssl_ciphers  ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5;<br>        ssl_prefer_server_ciphers  on;<br><br>        # 启用HSTS标头，告诉浏览器始终使用HTTPS<br>        add_header Strict-Transport-Security &quot;max-age=31536000; <br>        includeSubDomains; preload&quot;;<br><br>        # 防止点击劫持<br>        add_header X-Frame-Options SAMEORIGIN;<br><br>        # 安全头部配置<br>        add_header X-Content-Type-Options &quot;nosniff&quot;;<br>        add_header X-XSS-Protection &quot;1; mode=block&quot;;<br>        add_header X-Frame-Options &quot;SAMEORIGIN&quot;;<br><br>        location / &#123;<br>            proxy_pass http://域名的ip:端口;<br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ol start="6"><li>重新加载nginx.conf配置文件<code>./nginx -s reload</code></li><li>域名访问验证即可</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux安装nginx</title>
    <link href="/2024/11/13/Linux%E5%AE%89%E8%A3%85nginx/"/>
    <url>/2024/11/13/Linux%E5%AE%89%E8%A3%85nginx/</url>
    
    <content type="html"><![CDATA[<h2 id="安装nginx依赖"><a href="#安装nginx依赖" class="headerlink" title="安装nginx依赖"></a>安装nginx依赖</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install gcc gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel<br></code></pre></td></tr></table></figure><h2 id="安装wget"><a href="#安装wget" class="headerlink" title="安装wget"></a>安装wget</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install wget<br></code></pre></td></tr></table></figure><h2 id="创建nginx安装目录"><a href="#创建nginx安装目录" class="headerlink" title="创建nginx安装目录"></a>创建nginx安装目录</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir /usr/local/nginx<br></code></pre></td></tr></table></figure><h2 id="下载nginx"><a href="#下载nginx" class="headerlink" title="下载nginx"></a>下载nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget https://nginx.org/download/nginx-1.8.0.tar.gz<br></code></pre></td></tr></table></figure><h2 id="解压nginx压缩包"><a href="#解压nginx压缩包" class="headerlink" title="解压nginx压缩包"></a>解压nginx压缩包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -xvf nginx-1.8.0.tar.gz<br></code></pre></td></tr></table></figure><h2 id="进入nginx目录进行配置"><a href="#进入nginx目录进行配置" class="headerlink" title="进入nginx目录进行配置"></a>进入nginx目录进行配置</h2><p>配置nginx(考虑到后续安装SSL证书，添加两个模块)</p><p><strong>–with-http_stub_status_module</strong>：用来监控 Nginx 的当前状态 <strong>–with-http_ssl_module</strong>：使用https协议模块。默认情况下，该模块没有被构建。前提是openssl与openssl-devel已安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">./configure --with-http_stub_status_module --with-http_ssl_module<br></code></pre></td></tr></table></figure><h2 id="编译与安装"><a href="#编译与安装" class="headerlink" title="编译与安装"></a>编译与安装</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">编译</span><br>make<br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装</span><br>make install<br></code></pre></td></tr></table></figure><h2 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查找nginx安装目录</span><br>whereis nginx<br><span class="hljs-meta prompt_"># </span><span class="language-bash">切换到对应的目录</span><br>cd /usr/local/nginx/sbin/<br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动nginx</span><br>./nginx<br><span class="hljs-meta prompt_"># </span><span class="language-bash">验证nginx是否启动成功 方法一</span><br>curl http://localhost:80<br><span class="hljs-meta prompt_"># </span><span class="language-bash">验证nginx是否启动成功 方法二</span><br>ps -ef | grep nginx<br></code></pre></td></tr></table></figure><h2 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">关闭防火墙</span><br>systemctl stop firewalld<br><span class="hljs-meta prompt_"># </span><span class="language-bash">注：如果是服务器的话对安全组进行修改就可以了</span><br></code></pre></td></tr></table></figure><h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">启动</span><br>./nginx<br><span class="hljs-meta prompt_"># </span><span class="language-bash">关闭</span><br>./nginx -s stop<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启</span><br>./nginx -s reopen<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重新加载配置文件</span><br>./nginx -s reload<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>window端口占用</title>
    <link href="/2024/11/13/window%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/"/>
    <url>/2024/11/13/window%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="查找对应的端口"><a href="#查找对应的端口" class="headerlink" title="查找对应的端口"></a>查找对应的端口</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">netstat -ano | findstr 端口号<br></code></pre></td></tr></table></figure><p>注：展示的最后一列就是对应的线程号</p><h2 id="删除对应的线程"><a href="#删除对应的线程" class="headerlink" title="删除对应的线程"></a>删除对应的线程</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">taskkill /T /F /PID 线程号<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>window</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mybatis分页插件手写count查询</title>
    <link href="/2024/11/12/Mybatis%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6%E6%89%8B%E5%86%99count%E6%9F%A5%E8%AF%A2/"/>
    <url>/2024/11/12/Mybatis%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6%E6%89%8B%E5%86%99count%E6%9F%A5%E8%AF%A2/</url>
    
    <content type="html"><![CDATA[<p>注，手写需要mybatis版本的支持，必须再&gt;&#x3D;<code>5.0.4</code>版本才可以</p><p>对应官网的文献地址：<a href="https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/Changelog.md">https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/Changelog.md</a></p><p>在mapper中增加对应的分页方法，<code>分页方法名字+_COUNT </code>，返回值为<code>Long</code>类型，然后在对应的<code>xml</code>文件中生成对应的方法，然后写对应的查询方法，通常是重新首先都是为了剔除没必要的关联查询，提高其查询的速度</p><p>mapper.java改造</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">xxxMapper</span>&#123;<br>    <span class="hljs-comment">//查询方法</span><br>    List&lt;?&gt; query(ParamObject queryParam);<br>    <br>    <span class="hljs-comment">//统计的方法</span><br>    Long <span class="hljs-title function_">query_COUNT</span><span class="hljs-params">(ParamObject queryParam)</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>mapper.xml改造</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;query&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;ParamObject&quot;</span>&gt;</span><br>    select *<br>from xxx<br>    <span class="hljs-tag">&lt;<span class="hljs-name">where</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">where</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;query_COUNT&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;Long&quot;</span>&gt;</span><br>    select count(有索引的列)<br>from xxx<br>    <span class="hljs-tag">&lt;<span class="hljs-name">where</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">where</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Mybatis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/11/12/hello-world/"/>
    <url>/2024/11/12/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>IDEA设置VM内存大小</title>
    <link href="/2024/11/11/IDEA%E8%AE%BE%E7%BD%AEVM%E5%86%85%E5%AD%98%E5%A4%A7%E5%B0%8F/"/>
    <url>/2024/11/11/IDEA%E8%AE%BE%E7%BD%AEVM%E5%86%85%E5%AD%98%E5%A4%A7%E5%B0%8F/</url>
    
    <content type="html"><![CDATA[<p>idea设置的low memory内存不足报错</p><h2 id="IDEA展示vm大小显示"><a href="#IDEA展示vm大小显示" class="headerlink" title="IDEA展示vm大小显示"></a>IDEA展示vm大小显示</h2><h2 id="IDEA设置vm大小"><a href="#IDEA设置vm大小" class="headerlink" title="IDEA设置vm大小"></a>IDEA设置vm大小</h2><p><code>win+R</code>输入cmd</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">SET VM_OPTIONS_FILE=<br>SET USER_VM_OPTIONS_FILE=<br>IF NOT &quot;%IDEA_VM_OPTIONS%&quot; == &quot;&quot; (<br>  :: 1. %&lt;IDE_NAME&gt;_VM_OPTIONS%<br>  echo &quot;%IDEA_VM_OPTIONS%&quot;<br>  IF EXIST &quot;%IDEA_VM_OPTIONS%&quot; SET &quot;VM_OPTIONS_FILE=%IDEA_VM_OPTIONS%&quot;<br>)<br></code></pre></td></tr></table></figure><p>idea的配置文件</p><p>将文件中的<code>Xms</code>和<code>Xmx</code>进行修改</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs diff"><span class="hljs-deletion">-Xms4096m</span><br><span class="hljs-deletion">-Xmx8192m</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>IDEA</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux安装rabbitMQ</title>
    <link href="/2024/11/01/Linux%E5%AE%89%E8%A3%85rabbitMQ/"/>
    <url>/2024/11/01/Linux%E5%AE%89%E8%A3%85rabbitMQ/</url>
    
    <content type="html"><![CDATA[<p><strong>本教程用的是centos7系统</strong></p><p>RabbitMQ是一个开源的遵循AMQP协议实现的基于Erlang语言编写，即需要先安装部署Erlang环境再安装RabbitMQ环境。</p><h2 id="安装Erlang"><a href="#安装Erlang" class="headerlink" title="安装Erlang"></a>安装Erlang</h2><p>官网：<a href="https://packagecloud.io/rabbitmq/rabbitmq-server">https://packagecloud.io/rabbitmq/rabbitmq-server</a></p><p>下载脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget --content-disposition https://packagecloud.io/rabbitmq/erlang/packages/el/7/erlang-22.3.4.12-1.el7.x86_64.rpm/download.rpm<br></code></pre></td></tr></table></figure><p>本地安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum localinstall erlang-22.3.4.12-1.el7.x86_64.rpm<br></code></pre></td></tr></table></figure><h2 id="安装RabbitMQ"><a href="#安装RabbitMQ" class="headerlink" title="安装RabbitMQ"></a>安装RabbitMQ</h2><p>下载脚本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget --content-disposition https://packagecloud.io/rabbitmq/rabbitmq-server/packages/el/7/rabbitmq-server-3.8.13-1.el7.noarch.rpm/download.rpm<br></code></pre></td></tr></table></figure><p>运行下面的命令来将 Key 导入，执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rpm --import https://www.rabbitmq.com/rabbitmq-release-signing-key.asc<br></code></pre></td></tr></table></figure><p><strong>注：此处有可能下载失败，因为这个是外网你可以连接vpn去下载丢到服务器上执行，此处脚本可以改成</strong></p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">rpm --<span class="hljs-keyword">import</span> rabbitmq-release-signing-key.asc<br></code></pre></td></tr></table></figure><p>本地安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum localinstall rabbitmq-server-3.8.13-1.el7.noarch.rpm<br></code></pre></td></tr></table></figure><p>启动mq</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start rabbitmq-server<br></code></pre></td></tr></table></figure><p>设置开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable rabbitmq-server<br></code></pre></td></tr></table></figure><h2 id="安装RabbitMQ界面管理"><a href="#安装RabbitMQ界面管理" class="headerlink" title="安装RabbitMQ界面管理"></a>安装RabbitMQ界面管理</h2><p>安装脚本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">rabbitmq-plugins enable rabbitmq_management<br><span class="hljs-meta prompt_"># </span><span class="language-bash">Enabling plugins on node rabbit@VM-8-17-centos:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">rabbitmq_management</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">The following plugins have been configured:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">  rabbitmq_management</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">  rabbitmq_management_agent</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">  rabbitmq_web_dispatch</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Applying plugin configuration to rabbit@VM-8-17-centos...</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">The following plugins have been enabled:</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">  rabbitmq_management</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">  rabbitmq_management_agent</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">  rabbitmq_web_dispatch</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># set 3 plugins.</span></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Offline change; changes will take effect at broker restart.</span><br></code></pre></td></tr></table></figure><p>此界面管理需要重启rabbitmq</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart rabbitmq-server<br></code></pre></td></tr></table></figure><h2 id="日常使用"><a href="#日常使用" class="headerlink" title="日常使用"></a>日常使用</h2><p>需要开通<code>1567端口</code>和<code>15672端口</code>才可以进行使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">状态</span><br>systemctl status rabbitmq-server<br><span class="hljs-meta prompt_">#</span><span class="language-bash">启动</span><br>systemctl start rabbitmq-server<br><span class="hljs-meta prompt_">#</span><span class="language-bash">停止</span><br>systemctl stop rabbitmq-server<br><span class="hljs-meta prompt_">#</span><span class="language-bash">重启</span><br>systemctl restart rabbitmq-server<br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置用户分配权限</span><br>rabbitmqctl set_user_tags admin administrator<br><span class="hljs-meta prompt_">#</span><span class="language-bash">设置vhost的用户权限</span><br>rabbitmqctl set_permissions -p / admin &quot;.*&quot; &quot;.*&quot; &quot;.*&quot; <br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>mq</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
